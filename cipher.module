<?php

function cipher_menu() {
    $items = array();
    $items['cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_success'] = array(
        'title' => 'Success',
        'page callback' => 'cipher_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_form() {
    $form['shift_value'] = array(
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#description' => t('Please enter the number of places to shift each letter over.'),
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_alphabet_range'),
        '#required' => TRUE,
    );
    $form['shift_direction'] = array(
        '#title' => 'Shift Direction',
        '#type' => 'textfield',
        '#description' => t('Please enter the direction to shift the letters.'),
        '#element_validate' => array('element_validate_left_or_right'),
        '#required' => TRUE,
    );
    $form['input_phrase'] = array(
        '#title' => 'Phrase',
        '#type' => 'textfield',
        '#description' => t('Which phrase would you like to encrypt?'),
        '#element_validate' => array('element_validate_characters'),
        '#required' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Go',
    );

    return $form;
}

function cipher_form_submit($form, &$form_state) {
    //Variables for user input from form
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];
    $input_phrase = $form_state['values']['input_phrase'];

    //Converts input phrase to array of characters
    $input_phrase_array = str_split($input_phrase);

    $alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');

    //Converts left shift value to equivalent right shift
    if($shift_direction == 'left'){
        $shift_value = 26 - $shift_value;
    }

    $output_phrase = '';

    //Loops through each character in input phrase for output cipher phrase
    foreach ($input_phrase_array as $character) {
        $character_lower = strtolower($character);
        //If character is in the alphabet, an encrypted letter is added to the output phrase. Ignores special characters.
        if(in_array($character_lower, $alphabet)) {
            $index_of_character = array_search($character_lower, $alphabet);
            //Find index of letter in cipher
            $cipher_index = ($index_of_character + $shift_value) % 26;
            $output_phrase .= $alphabet[$cipher_index];
        }
        else{
            $output_phrase .= $character;
        }
    }
    $_SESSION['output_phrase'] = $output_phrase;

    $form_state['redirect'] = 'cipher_success';
}

function cipher_success() {
    $output = $_SESSION['output_phrase'];
    return $output;
}

//Validates if input is "left" or "right"
function element_validate_left_or_right($element) {
    if($element['#value'] != 'left'){
        if($element['#value'] != 'right') {
            form_error($element, t('Please enter a shift direction of left or right.'));
        }
    }
}

function element_validate_alphabet_range($element){
    if($element['#value'] > 26) {
        form_error($element, t('Shift value must be between 1 and 25.'));
    }
}

function element_validate_characters($element){
    $allowed_characters = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ' ', '.', ',', '!', '?');
    $element_array = str_split($element['#value']);
    foreach($element_array as $checked_letter){
        $checked_letter_lower = strtolower($checked_letter);
        if(!in_array($checked_letter_lower, $allowed_characters)){
            form_error($element, t('Input must include only letters, spaces, and the following punctuation: . , ? !'));
        }
    }
}
